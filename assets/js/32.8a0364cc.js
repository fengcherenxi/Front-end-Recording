(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{614:function(_,t,v){"use strict";v.r(t);var a=v(17),s=Object(a.a)({},(function(){var _=this,t=_.$createElement,v=_._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h2",{attrs:{id:"_1-操作系统概述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-操作系统概述"}},[_._v("#")]),_._v(" 1. 操作系统概述")]),_._v(" "),v("h3",{attrs:{id:"_1-1-操作系统的特征"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-操作系统的特征"}},[_._v("#")]),_._v(" 1.1 操作系统的特征")]),_._v(" "),v("ul",[v("li",[_._v("并发：计算机系统中同时存在多个运行着的程序\n"),v("ul",[v("li",[_._v("宏观上同时发生，微观上交替发生")])])]),_._v(" "),v("li",[_._v("共享：系统资源可供内存众多个并发执行的进程共同使用\n"),v("ul",[v("li",[_._v("互斥共享方式：QQ和微信视频聊天")]),_._v(" "),v("li",[_._v("同时共享方式：QQ和微信发送文件")]),_._v(" "),v("li",[_._v("并发性——计算机系统中存在多个运行程序")]),_._v(" "),v("li",[_._v("共享性——系统中资源可供内存中多个并发执行的进程共同使用")]),_._v(" "),v("li",[_._v("并发性和共享性互为存在条件")])])]),_._v(" "),v("li",[_._v("虚拟：把一个物理实体变为若干逻辑上的对应物。空分复用技术（虚拟存储器技术）、时分复用技术（虚拟处理器）")]),_._v(" "),v("li",[_._v("异步：多道程序环境下，允许多个程序并发执行，但由于资源有限，进程的执行不是一贯到底的，已不可预知的速度向前推进。\n"),v("ul",[v("li",[_._v("只有系统拥有并发性，才有可能导致异步性。")])])])]),_._v(" "),v("p",[_._v("没有并发和共享就谈不上虚拟和异步，因此并发和共享是操作系统的两个最基本特征。")]),_._v(" "),v("h3",{attrs:{id:"_1-2-操作系统的发展和分类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-操作系统的发展和分类"}},[_._v("#")]),_._v(" 1.2 操作系统的发展和分类")]),_._v(" "),v("p",[v("img",{attrs:{src:"img/os%E7%9A%84%E5%8F%91%E5%B1%95%E4%B8%8E%E5%88%86%E7%B1%BB.png",alt:"os的发展与分类"}})]),_._v(" "),v("ul",[v("li",[_._v("多道批处理系统——引入中断技术，由操作系统负责管理这些程序的运行，各个程序之间并发执行共享计算机资源。资源利用率大幅提升，系统吞吐量大。缺点没有人机交互功能（分时操作系统用于处理这个问题）。"),v("img",{attrs:{src:"img/%E5%A4%9A%E9%81%93%E6%89%B9%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF.png",alt:"多道批处理技术"}})]),_._v(" "),v("li",[_._v("分时操作系统：计算机以时间片为单位轮流为各个用户、作业服务，解决了人机交互问题，缺点在于不能优先处理一些紧急任务，操作系统对每个用户都是完全公平的。")]),_._v(" "),v("li",[_._v("实时操作系统：有优先级，能够响应一些紧急任务。主要特点是及时性和可靠性。")]),_._v(" "),v("li",[_._v("网络操作系统：实现网络中各种资源的共享和各个计算机之间的通信。")])]),_._v(" "),v("h3",{attrs:{id:"_1-3-操作系统的运行机制和体系结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-操作系统的运行机制和体系结构"}},[_._v("#")]),_._v(" 1.3 操作系统的运行机制和体系结构")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("运行机制")]),_._v(" "),v("ul",[v("li",[_._v("指令：特权指令、非特权指令。——就是处理器（CPU）能识别、执行的最基本命令")]),_._v(" "),v("li",[_._v("两种处理状态：用户态（目态，此时CPU只能执行非特权指令）、核心态（管态：特权指令、非特权指令都可执行）")]),_._v(" "),v("li",[_._v("两种程序：内核程序（运行在核心态）、应用程序（运行在用户态）")])])]),_._v(" "),v("li",[v("p",[_._v("操作系统内核\n"),v("img",{attrs:{src:"img/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84.png",alt:""}})])])]),_._v(" "),v("p",[v("img",{attrs:{src:"img/%E5%86%85%E6%A0%B8.png",alt:""}})]),_._v(" "),v("ul",[v("li",[_._v("总结")])]),_._v(" "),v("p",[v("img",{attrs:{src:"img/%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E6%80%BB%E7%BB%93.png",alt:""}})]),_._v(" "),v("h3",{attrs:{id:"_1-4-中断和异常"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-中断和异常"}},[_._v("#")]),_._v(" 1.4 中断和异常")]),_._v(" "),v("p",[_._v("引入中断机制就实现了多道程序并发执行。发生中断意味着需要操作系统的介入，开展管理工作。")]),_._v(" "),v("p",[_._v("中断是用户态到核心态切换的唯一途径。核心态到用户态的切换是通过执行一个特权指令，将程序状态字（PSW）的标志位设置为“用户态”")]),_._v(" "),v("h3",{attrs:{id:"_1-5-系统调用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-系统调用"}},[_._v("#")]),_._v(" 1.5 系统调用")]),_._v(" "),v("p",[_._v("系统调用相关处理涉及到对系统资源的管理、对进程的控制，这些功能需要执行一些特权指令才能完成，因此系统调用的相关处理需要在和心态下进行。")]),_._v(" "),v("ul",[v("li",[_._v("系统调用和库函数的区别：操作系统向上提供系统调用；编程语言向上提供库函数，有时将系统调用封装为库函数，隐藏系统调用细节，使上层进行系统调用更加方便。")])]),_._v(" "),v("p",[v("img",{attrs:{src:"img/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E4%B8%8E%E5%BA%93%E5%87%BD%E6%95%B0.png",alt:""}})]),_._v(" "),v("ul",[v("li",[_._v("系统调用的背后过程：传递系统调用参数——执行陷入指令（用户态）——执行系统调相应服务程序（核心态）——返回用户程序")])]),_._v(" "),v("p",[v("img",{attrs:{src:"img/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E7%9A%84%E8%83%8C%E5%90%8E.png",alt:""}})]),_._v(" "),v("h2",{attrs:{id:"_2-进程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-进程"}},[_._v("#")]),_._v(" 2. 进程")])])}),[],!1,null,null,null);t.default=s.exports}}]);