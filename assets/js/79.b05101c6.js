(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{660:function(t,_,v){"use strict";v.r(_);var r=v(17),a=Object(r.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p",[t._v("对象是某个特定引用类型的实例。新对象是使用new操作符后跟一个构造函数来创建的。构造函数本身就是一个函数，只不过该函数是出于创建新对象的目的而定义的。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://github.com/fengcherenxi/img/blob/main/5-1.png",alt:""}})]),t._v(" "),v("h2",{attrs:{id:"_5-1-object类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-object类型"}},[t._v("#")]),t._v(" 5.1 Object类型")]),t._v(" "),v("p",[t._v("创建Object实例的方式有两种。")]),t._v(" "),v("ul",[v("li",[t._v("第一种是使用new操作符后跟Object构造函数")]),t._v(" "),v("li",[t._v("另一种方式是使用对象字面量表示法\n"),v("ul",[v("li",[t._v("在使用对象字面量语法时，属性名也可以使用字符串；数值属性名自动转换为字符串。")]),t._v(" "),v("li",[t._v("在通过对象字面量定义对象时，实际上不会调用Object构造函数")]),t._v(" "),v("li",[t._v("对象字面量也是向函数传递大量可选参数的首选方式")])])])]),t._v(" "),v("p",[t._v("如果属性名中包含会导致语法错误的字符，或者属性名使用的是关键字或保留字，也可以使用方括号表示法")]),t._v(" "),v("p",[t._v("通常，除非必须使用变量来访问属性，否则我们建议使用点表示法。")]),t._v(" "),v("h2",{attrs:{id:"_5-2-array类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-array类型"}},[t._v("#")]),t._v(" 5.2 Array类型")]),t._v(" "),v("ul",[v("li",[t._v("每一项可以保存任何类型的数据。")]),t._v(" "),v("li",[t._v("大小是可动态调整。")])]),t._v(" "),v("p",[t._v("使用Array构造函数时也可以省略new操作符。")]),t._v(" "),v("p",[t._v("与对象一样，在使用数组字面量表示法时，也不会调用Array构造函数。")]),t._v(" "),v("ul",[v("li",[t._v("查改增可以直接通过索引实现；")]),t._v(" "),v("li",[v("strong",[t._v("length属性")]),t._v("——不是只读。通过设置这个属性，可从数组末尾移除项或添加项\n"),v("ul",[v("li",[t._v("如果将其length属性设置为大于数组项数的值，新增项取得undefined；")]),t._v(" "),v("li",[t._v("利用length属性在数组末尾添加新项；")]),t._v(" "),v("li",[t._v("数组最多可以包含4294967295个项。超过这个上限值会发生异常。")])])])]),t._v(" "),v("h3",{attrs:{id:"_5-2-1-检测数组"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-1-检测数组"}},[t._v("#")]),t._v(" 5.2.1 检测数组")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://github.com/fengcherenxi/img/blob/main/5-2.png",alt:""}})]),t._v(" "),v("ul",[v("li",[t._v("使用条件：对于一个网页，或者一个全局作用域而言，使用"),v("strong",[t._v("instanceof操作符")]),t._v("就能得到满意的结果；")]),t._v(" "),v("li",[t._v("网页包含多个框架，那存在不同全局执行环境，从而存在不同版本的Array构造函数。如果你从一个框架向另一个框架传入一个数组，那么传入的数组与在第二个框架中原生创建的数组分别具有各自不同的构造函数。")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://github.com/fengcherenxi/img/blob/main/5-3.png",alt:""}})]),t._v(" "),v("ul",[v("li",[t._v("**Array.isArray()**方法。目的是最终确定某个值到底是不是数组，不管哪个全局执行环境创建的。")]),t._v(" "),v("li",[t._v("要在尚未实现这个方法中的浏览器中准确检测数组，请参考22.1.1节。")])]),t._v(" "),v("h3",{attrs:{id:"_5-2-2-转换方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-2-转换方法"}},[t._v("#")]),t._v(" 5.2.2 转换方法")]),t._v(" "),v("p",[t._v("所有对象都具有toLocaleString()、toString()和valueOf()方法。")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("valueOf()")]),t._v("——返回数组本身")]),t._v(" "),v("li",[v("strong",[t._v("toString()")]),t._v("——返回由数组中每个值的字符串形式拼接而成的一个以逗号分隔的字符串。即调用数组每一项的toString()方法。")]),t._v(" "),v("li",[t._v("**toLocaleString()**方法经常也会返回与toString()和valueOf()方法相同的值，但也不总是如此。数组的toLocaleString()会创建一个数组值的以逗号分隔的字符串。不同之处在于为取得每一项的值，调用的是每一项的toLocale-String()方法。")]),t._v(" "),v("li",[v("strong",[t._v("join()")]),t._v("——分隔符。——如果不给join()方法传入任何值，或者给它传入undefined，则使用逗号作为分隔符。")]),t._v(" "),v("li",[t._v("如果数组中的某一项的值是"),v("strong",[t._v("null或者undefined")]),t._v("，那么该值在join()、toLocaleString()、toString()方法返回的结果中以空字符串表示。")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://github.com/fengcherenxi/img/blob/main/5-4.png",alt:""}})]),t._v(" "),v("h3",{attrs:{id:"_5-2-3-栈方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-3-栈方法"}},[t._v("#")]),t._v(" 5.2.3 栈方法")]),t._v(" "),v("p",[t._v("push()和pop()方法")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("push()")]),t._v("——接收任意数量的参数添加到末尾，返回新数组长度。")]),t._v(" "),v("li",[v("strong",[t._v("pop()")]),t._v("——数组末尾移除一项，返回移除的项。")])]),t._v(" "),v("h3",{attrs:{id:"_5-2-4-队列方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-4-队列方法"}},[t._v("#")]),t._v(" 5.2.4 队列方法")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("shift()")]),t._v("——移除第一个项返回该项。使用**shift()和push()**方法——模仿队列。")]),t._v(" "),v("li",[v("strong",[t._v("unshift()")]),t._v("——数组前端添加任意个项，返回新数组长度。使用**unshift()和pop()**方法，模拟队列。")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://github.com/fengcherenxi/img/blob/main/5-5.png",alt:""}})]),t._v(" "),v("h2",{attrs:{id:"_2-5重排序方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-5重排序方法"}},[t._v("#")]),t._v(" 2.5重排序方法")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("reverse()")]),t._v("——反转数组")]),t._v(" "),v("li",[v("strong",[t._v("sort()")]),t._v("——默认按字符串升序。sort()调用每个项的toString()方法，比较得到的字符串以确定排序。\n"),v("ul",[v("li",[t._v("接收一个比较函数作为参数。比较函数接收两个参数，如果第一个参数应该位于第二个之前则返回负数，两个参数相等则返回0，如果第一个参数应该位于第二个之后则返回正数。")])])])]),t._v(" "),v("h2",{attrs:{id:"_2-6操作方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-6操作方法"}},[t._v("#")]),t._v(" 2.6操作方法")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("concat()")]),t._v("——将参数添加到数组副本末尾，返回新构建的数组，不影响原数组。——常用于合并两个数组")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://github.com/fengcherenxi/img/blob/main/5-6.png",alt:""}})]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("slice()")]),t._v("——接受一或两个参数，即要返回项的起始和结束位置，不影响原数组。——常用于截取数组一部分")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://github.com/fengcherenxi/img/blob/main/5-7.png",alt:""}})]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("splice()")]),t._v("——主要用途是插入项，影响原数组。\n"),v("ul",[v("li",[t._v("删除：splice(0,2)会删除数组中的前两项。")]),t._v(" "),v("li",[t._v('插入：splice(2,0, "red", "green")会从当前数组的位置2开始插入字符串"red"和"green"')]),t._v(" "),v("li",[t._v('替换：splice (2,1, "red", "green")会删除当前数组位置2的项，然后再从位置2开始插入字符串"red"和"green"。')]),t._v(" "),v("li",[t._v("返回一个数组，删除的项（如果没有删除项，则返回空数组）")])])])]),t._v(" "),v("h2",{attrs:{id:"_2-7位置方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-7位置方法"}},[t._v("#")]),t._v(" 2.7位置方法")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("IndexOf()")]),t._v("——要查找的项和（可选的）表示查找起点位置的索引。开头向后查找。没找到的情况下返回-1。")]),t._v(" "),v("li",[v("strong",[t._v("lastIndexOf()")]),t._v("——末尾向前查找。没找到的情况下返回-1。")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://github.com/fengcherenxi/img/blob/main/5-8.png",alt:""}})]),t._v(" "),v("h2",{attrs:{id:"_2-8迭代方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-8迭代方法"}},[t._v("#")]),t._v(" 2.8迭代方法")]),t._v(" "),v("p",[t._v("ECMAScript 5为数组定义了"),v("strong",[t._v("5个迭代方法")]),t._v("。")]),t._v(" "),v("p",[t._v("接收两个参数：要在每一项上"),v("strong",[t._v("运行的函数")]),t._v("和运行该函数的"),v("strong",[t._v("作用域对象")]),t._v("（可选的）——影响this的值。")]),t._v(" "),v("p",[t._v("传入这些方法中的函数会接收三个参数：值、位置和数组本身。"),v("strong",[t._v("(item,index,array)")])]),t._v(" "),v("p",[v("strong",[t._v("不修改原数组")]),t._v("。")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("every()")]),t._v("——每一项运行函数，都返回true则返回true。")]),t._v(" "),v("li",[v("strong",[t._v("filter()")]),t._v("——每一项运行函数，返回true的项组成的数组。——"),v("strong",[t._v("常用于列表查找")])]),t._v(" "),v("li",[v("strong",[t._v("forEach()")]),t._v("——每一项运行函数。没有返回值，本质上与使用"),v("strong",[t._v("for循环迭代数组一样")]),t._v("。")]),t._v(" "),v("li",[v("strong",[t._v("map()")]),t._v("——每一项运行函数，返回函数调用结果组成的数组。——"),v("strong",[t._v("常用于react列表渲染")])]),t._v(" "),v("li",[v("strong",[t._v("some()")]),t._v("——每一项运行函数，对任一项返回true，则返回true。——"),v("strong",[t._v("注意与every辨析")])])]),t._v(" "),v("h2",{attrs:{id:"_2-9归并方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-9归并方法"}},[t._v("#")]),t._v(" 2.9归并方法")]),t._v(" "),v("p",[t._v("接收4个参数：前一个值、当前值、项的索引和数组对象。"),v("strong",[t._v("(pre,cur,index,array)")])]),t._v(" "),v("p",[t._v("函数返回值作为第一个参数自动传给下一项")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("reduce()")]),t._v("——从前向后。常用于求和。第一次执行回调函数，prev是1, cur是2。第二次，prev是3（1加2的结果）, cur是3（数组的第三项）。")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://github.com/fengcherenxi/img/blob/main/5-9.png",alt:""}})]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("reduceRight()")]),t._v("——从后向前，其他都一样。")])]),t._v(" "),v("h2",{attrs:{id:"_5-3-date类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-date类型"}},[t._v("#")]),t._v(" 5.3 Date类型")]),t._v(" "),v("p",[t._v("使用自UTC（Coordinated Universal Time，国际协调时间）1970年1月1日零时经过的毫秒数保存日期。")]),t._v(" "),v("p",[t._v("不传递参数新创建的对象自动获得当前日期和时间。")]),t._v(" "),v("p",[t._v("根据特定的日期和时间创建日期对象，必须传入表示该日期的毫秒数：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("Date.parse()")]),t._v("——接收一个表示日期的字符串参数，然后尝试根据这个字符串返回相应日期的毫秒数。如果直接将表示日期的字符串传递给Date构造函数，也会在后台调用Date.parse()。")]),t._v(" "),v("li",[v("strong",[t._v("Date.UTC()")]),t._v("——这些参数中，只有前两个参数（年和月）是必需的。如果没有提供月中的天数，则假设天数为1；如果省略其他参数，则统统假设为0。")])]),t._v(" "),v("p",[t._v("如同模仿Date.parse()一样，Date构造函数也会模仿Date.UTC()，但有一点明显不同：日期和时间都基于本地时区而非GMT来创建。不过，Date构造函数接收的参数仍然与Date.UTC()相同。")]),t._v(" "),v("h2",{attrs:{id:"_5-4-regexp类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-regexp类型"}},[t._v("#")]),t._v(" 5.4 RegExp类型")]),t._v(" "),v("h2",{attrs:{id:"_5-5-function类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-function类型"}},[t._v("#")]),t._v(" 5.5 Function类型")]),t._v(" "),v("h2",{attrs:{id:"_5-6-基本包装类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-基本包装类型"}},[t._v("#")]),t._v(" 5.6 基本包装类型")]),t._v(" "),v("h2",{attrs:{id:"_5-7-单体内置对象"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-单体内置对象"}},[t._v("#")]),t._v(" 5.7 单体内置对象")])])}),[],!1,null,null,null);_.default=a.exports}}]);