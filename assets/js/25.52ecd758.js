(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{605:function(v,_,e){"use strict";e.r(_);var t=e(17),i=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h2",{attrs:{id:"_1-浏览器缓存的全过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-浏览器缓存的全过程"}},[v._v("#")]),v._v(" 1. 浏览器缓存的全过程")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://app.yinxiang.com/files/common-services/binary-datas/c2VydmljZVR5cGU9MiZzZXJ2aWNlRGF0YT17Im5vdGVHdWlkIjoiNTRkMDY5ZWEtYTlmNi00ZGIwLTlmMzktYmU5ZjM4MzFjMzIwIiwicmVzb3VyY0d1aWQiOiJlZGM5NjAyNy1kZWI2LTQ4MTItYmY4YS1lOGQ2MmQ1YzU1YzkifQ==",alt:"image"}})]),v._v(" "),e("ul",[e("li",[v._v("第一列强缓存：头信息中设置cache-control 的 max-age（http1.1），或Expires（http1.0，时间是绝对时间、服务器的时间，存在客户端和服务端时间不一致情况）")]),v._v(" "),e("li",[v._v("Cache-Control 的优先级要高于 Expires。")]),v._v(" "),e("li",[v._v("当"),e("code",[v._v("max-age=xxx")]),v._v(" 过期了或值为"),e("code",[v._v("no-store")]),v._v("命中协商缓存")])]),v._v(" "),e("p",[e("strong",[v._v("no-cache和no-store很容易混淆：")])]),v._v(" "),e("ul",[e("li",[v._v("no-cache 是指先要和服务器确认是否有资源更新，在进行判断。也就是说没有强缓存，但是会有协商缓存；")]),v._v(" "),e("li",[v._v("no-store 是指不使用任何缓存，每次请求都直接从服务器获取资源。")])]),v._v(" "),e("ul",[e("li",[v._v("第二列协商缓存：If-None-Match 和 If-Modified-Since。服务器根据Etag值（文件唯一标志）或者对比If-Modified-Since是否一致，不一致则返回新的 last-modified（只能精确到秒级） 和文件并返回 200")]),v._v(" "),e("li",[v._v("Etag 的优先级更高，但考虑多个服务器负载平衡问题时，不要设置Etag属性，因为该属性在每个服务器上不一样。")])]),v._v(" "),e("h2",{attrs:{id:"_2-为什么需要浏览器缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-为什么需要浏览器缓存"}},[v._v("#")]),v._v(" 2. 为什么需要浏览器缓存？")]),v._v(" "),e("p",[v._v("所谓的"),e("strong",[v._v("浏览器缓存")]),v._v("指的是浏览器将用户请求过的静态资源，存储到电脑本地磁盘中，当浏览器再次访问时，就可以直接从本地加载，不需要再去服务端请求了。优点：")]),v._v(" "),e("ul",[e("li",[v._v("减少了服务器的负担，提高了网站的性能")]),v._v(" "),e("li",[v._v("加快了客户端网页的加载速度")]),v._v(" "),e("li",[v._v("减少了多余网络数据传输")])]),v._v(" "),e("h2",{attrs:{id:"_3-点击刷新按钮或者按-f5、按-ctrl-f5-强制刷新-、地址栏回车有什么区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-点击刷新按钮或者按-f5、按-ctrl-f5-强制刷新-、地址栏回车有什么区别"}},[v._v("#")]),v._v(" 3. 点击刷新按钮或者按 F5、按 Ctrl+F5 （强制刷新）、地址栏回车有什么区别？")]),v._v(" "),e("ul",[e("li",[v._v("F5：浏览器直接对本地的缓存文件过期，但是会带上If-Modifed-Since，If-None-Match，这就意味着服务器会对文件检查新鲜度，返回结果可能是 304，也有可能是 200。")]),v._v(" "),e("li",[v._v("用户按 Ctrl+F5（强制刷新）：相当于之前从来没有请求过，返回结果是 200。")]),v._v(" "),e("li",[v._v("地址栏回车：按照正常流程，本地检查是否过期，然后服务器检查新鲜度，最后返回内容。")])]),v._v(" "),e("h2",{attrs:{id:"_4-浏览器资源缓存的位置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-浏览器资源缓存的位置"}},[v._v("#")]),v._v(" 4. 浏览器资源缓存的位置")]),v._v(" "),e("p",[v._v("优先级从高到低分别是：")]),v._v(" "),e("ul",[e("li",[v._v("Service Worker——Service Worker 运行在 JavaScript 主线程之外，虽然由于脱离了浏览器窗体无法直接访问 DOM，但是它可以完成离线缓存、消息推送、网络代理等功能。它可以让我们"),e("strong",[v._v("自由控制")]),v._v("缓存哪些文件、如何匹配缓存、如何读取缓存，并且"),e("strong",[v._v("缓存是持续性的")]),v._v("。当 Service Worker 没有命中缓存的时候，需要去调用 "),e("code",[v._v("fetch")]),v._v(" 函数获取  数据。也就是说，如果没有在 Service Worker 命中缓存，会根据缓存查找优先级去查找数据。"),e("strong",[v._v("但是不管是从 Memory Cache 中还是从网络请求中获取的数据，浏览器都会显示是从 Service Worker 中获取的内容。")])]),v._v(" "),e("li",[v._v("Memory Cache——就是内存缓存，效率最快，**但缓存持续性很短，会随着进程的释放而释放。**关闭页面缓存也就被释放了。")]),v._v(" "),e("li",[v._v("Disk Cache——存储在硬盘中，读取速度慢，但**胜在容量和存储时效性上。**会根据 HTTP Herder 中的字段判断哪些资源需要缓存，哪些资源可以不请求直接使用，哪些资源已经过期需要重新请求。"),e("strong",[v._v("并且即使在跨站点的情况下，相同地址的资源一旦被硬盘缓存下来，就不会再次去请求数据。")])])]),v._v(" "),e("p",[v._v("Push Cache 是 HTTP/2 中的内容，当以上三种缓存都没有命中时，它才会被使用。**并且缓存时间也很短暂，只在会话（Session）中存在，一旦会话结束就被释放。**特点：")]),v._v(" "),e("ul",[e("li",[v._v("所有的资源都能被推送，但是浏览器兼容性不好")]),v._v(" "),e("li",[v._v("可以推送 "),e("code",[v._v("no-cache")]),v._v(" 和 "),e("code",[v._v("no-store")]),v._v(" 的资源")]),v._v(" "),e("li",[v._v("一旦连接被关闭，Push Cache 就被释放")]),v._v(" "),e("li",[v._v("多个页面可以使用相同的 HTTP/2 连接，也就是说能使用同样的缓存")]),v._v(" "),e("li",[v._v("Push Cache 中的缓存只能被使用一次")]),v._v(" "),e("li",[v._v("浏览器可以拒绝接受已经存在的资源推送")]),v._v(" "),e("li",[v._v("可以给其他域名推送资源")])])])}),[],!1,null,null,null);_.default=i.exports}}]);