(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{594:function(_,t,v){"use strict";v.r(t);var e=v(17),a=Object(e.a)({},(function(){var _=this,t=_.$createElement,v=_._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("p",[_._v("常考http和https相关的知识点：")]),_._v(" "),v("h2",{attrs:{id:"_1-http状态码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-http状态码"}},[_._v("#")]),_._v(" 1.HTTP状态码")]),_._v(" "),v("ul",[v("li",[_._v("「200 OK」是最常见的成功状态码，表示一切正常。如果是非 HEAD 请求，服务器返回的响应头都会有 body 数据。")]),_._v(" "),v("li",[_._v("「204 No Content」也是常见的成功状态码，与 200 OK 基本相同，但响应头没有 body 数据。")]),_._v(" "),v("li",[_._v("「206 Partial Content」是应用于 HTTP 分块下载或断电续传，表示响应返回的 body 数据并不是资源的全部，而是其中的一部分，也是服务器处理成功的状态。")]),_._v(" "),v("li",[_._v("301 Moved Permanently：表示永久重定向，说明请求的资源已经不存在了，需改用新的 URL 再次访问。")]),_._v(" "),v("li",[_._v("302 Found：表示临时重定向，说明请求的资源还在，但暂时需要用另一个 URL 来访问。301 和 302 都会在响应头里使用字段 Location，指明后续要跳转的 URL，浏览器会自动重定向新的 URL。")]),_._v(" "),v("li",[_._v("302使用场景：\n"),v("ul",[v("li",[_._v("当我们在做活动时，登录到首页自动重定向，进入活动页面。")]),_._v(" "),v("li",[_._v("未登陆的用户访问用户中心重定向到登录页面。")]),_._v(" "),v("li",[_._v("访问404页面重新定向到首页。")])])]),_._v(" "),v("li",[_._v("304 Not Modified浏览器缓存相关,和重定向无关：表示客户端发送附带条件的请求时，服务器端允许请求访问资源，但未满足条件的情况。304 状态码返回时，不包含响应的主体部分。只有头部信息，是没有内容部分，提高了网页的性能影响页面SEO。\n带条件的请求（Http 条件请求）：使用 Get方法 请求，请求报文中包含（"),v("code",[_._v("if-match")]),_._v("、"),v("code",[_._v("if-none-match")]),_._v("、"),v("code",[_._v("if-modified-since")]),_._v("、"),v("code",[_._v("if-unmodified-since")]),_._v("、"),v("code",[_._v("if-range")]),_._v("）中任意首部。304告诉客户端有缓存。")])]),_._v(" "),v("p",[v("strong",[_._v("同样是重定向，307，303，302的区别？")])]),_._v(" "),v("p",[_._v("302是http1.0的协议状态码，在http1.1版本的时候为了细化302状态码⼜出来了两个303和307。 303明确表示客户端应当采⽤get⽅法获取资源，他会把POST请求变为GET请求进⾏重定向。 307会遵照浏览器标准，不会从post变为get。")]),_._v(" "),v("ul",[v("li",[_._v("「400 Bad Request」表示客户端请求的报文有错误，但只是个笼统的错误。")]),_._v(" "),v("li",[_._v("「403 Forbidden」表示服务器禁止访问资源，并不是客户端的请求出错。")]),_._v(" "),v("li",[_._v("「404 Not Found」表示请求的资源在服务器上不存在或未找到，所以无法提供给客户端。")]),_._v(" "),v("li",[_._v("「500 Internal Server Error」与 400 类型，是个笼统通用的错误码，服务器发生了什么错误，我们并不知道。")]),_._v(" "),v("li",[_._v("「501 Not Implemented」表示客户端请求的功能还不支持，类似“即将开业，敬请期待”的意思。")]),_._v(" "),v("li",[_._v("「502 Bad Gateway」通常是服务器作为网关或代理时返回的错误码，表示服务器自身工作正常，访问后端服务器发生了错误。")]),_._v(" "),v("li",[_._v("「503 Service Unavailable」表示服务器当前很忙，暂时无法响应服务器，类似“网络服务正忙，请稍后重试”的意思。")]),_._v(" "),v("li",[_._v("「504 Gateway Timeout」该状态码表示网关或者代理的服务器无法在规定的时间内获得想要的响应。他是HTTP 1.1中新加入的。")])]),_._v(" "),v("p",[_._v("503使用场景：")]),_._v(" "),v("ul",[v("li",[_._v("服务器停机维护时，主动用503响应请求；")]),_._v(" "),v("li",[_._v("nginx 设置限速，超过限速，会返回503。")])]),_._v(" "),v("h2",{attrs:{id:"_2-http常见字段"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-http常见字段"}},[_._v("#")]),_._v(" 2.http常见字段")]),_._v(" "),v("ul",[v("li",[_._v("host——请求的主机名，允许多个域名同处⼀个IP地址，即虚拟主机。")]),_._v(" "),v("li",[_._v("Content-Length——回应的数据长度。")]),_._v(" "),v("li",[_._v("Connection——客户端要求服务器使用 TCP 持久连接，以便其他请求复用。 HTTP/1.1 版本的默认连接都是持久连接，但为了兼容老版本，需指定 Connection 首部字段的值为 Keep-Alive。直到客户端或服务器主动关闭连接。但是这不是标准字段。")]),_._v(" "),v("li",[_._v("Content-Type——回应的数据是什么格式。")]),_._v(" "),v("li",[_._v("Accept——可以接受哪些数据格式。")]),_._v(" "),v("li",[_._v("Content-Encoding——数据的压缩方法。")]),_._v(" "),v("li",[_._v("Accept-Encoding——可以接受的压缩方法。")])]),_._v(" "),v("h2",{attrs:{id:"_3-get和post的请求的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-get和post的请求的区别"}},[_._v("#")]),_._v(" 3.GET和POST的请求的区别")]),_._v(" "),v("h3",{attrs:{id:"_3-1-概述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-概述"}},[_._v("#")]),_._v(" 3.1 概述")]),_._v(" "),v("ul",[v("li",[_._v("应用场景：请求资源是否修改服务器资源。Post向 URI 指定的资源提交数据，数据就放在报文的 body 里。")]),_._v(" "),v("li",[_._v("是否缓存：浏览器会对 Get 缓存，但很少对 Post 缓存。")]),_._v(" "),v("li",[_._v("安全性：Get 可将参数放入 url 中向服务器发送，不太安全 url 会被保留在记录中。")]),_._v(" "),v("li",[_._v("请求长度：对 url 长度的限制。")]),_._v(" "),v("li",[_._v("参数类型：post 的参数传递支持更多的数据类型。")])]),_._v(" "),v("h3",{attrs:{id:"_3-2-get-和-post-方法都是安全和幂等的吗"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-get-和-post-方法都是安全和幂等的吗"}},[_._v("#")]),_._v(" 3.2 GET 和 POST 方法都是安全和幂等的吗？")]),_._v(" "),v("ul",[v("li",[_._v("安全——不会「破坏」服务器上的资源。")]),_._v(" "),v("li",[_._v("幂等——多次执行相同的操作结果相同。\n"),v("ul",[v("li",[_._v("POST 不是")]),_._v(" "),v("li",[_._v("GET 是")])])])]),_._v(" "),v("h3",{attrs:{id:"_3-3-常见的http请求方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-常见的http请求方法"}},[_._v("#")]),_._v(" 3.3 常见的HTTP请求方法")]),_._v(" "),v("ul",[v("li",[_._v("GET: 获取数据；")]),_._v(" "),v("li",[_._v("POST：提交数据；")]),_._v(" "),v("li",[_._v("PUT：上传文件，更新数据；")]),_._v(" "),v("li",[_._v("DELETE：删除对象；")]),_._v(" "),v("li",[_._v("HEAD：获取报文首部，与GET相比，不返回报文主体部分；")]),_._v(" "),v("li",[_._v("OPTIONS：询问支持的请求方法，用来跨域请求；")]),_._v(" "),v("li",[_._v("CONNECT：要求在与代理服务器通信时建立隧道，使用隧道进行TCP通信；")]),_._v(" "),v("li",[_._v("TRACE: 回显服务器收到的请求，主要⽤于测试或诊断。")])]),_._v(" "),v("h3",{attrs:{id:"_3-4-post和put请求的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-post和put请求的区别"}},[_._v("#")]),_._v(" 3.4 POST和PUT请求的区别")]),_._v(" "),v("ul",[v("li",[_._v("PUT请求更新数据")]),_._v(" "),v("li",[_._v("POST请求创建数据")])]),_._v(" "),v("h2",{attrs:{id:"_4-http缺点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-http缺点"}},[_._v("#")]),_._v(" 4.http缺点")]),_._v(" "),v("p",[_._v("无状态双刃剑、明文传输双刃剑、不安全——HTTP+SSL/TLS——https")]),_._v(" "),v("h2",{attrs:{id:"_5-http和https协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-http和https协议"}},[_._v("#")]),_._v(" 5.HTTP和HTTPS协议")]),_._v(" "),v("h3",{attrs:{id:"_5-1-区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-区别"}},[_._v("#")]),_._v(" 5.1 区别")]),_._v(" "),v("ul",[v("li",[_._v("HTTP明文安全问题。HTTPS加入了 SSL/TLS 安全协议，加密传输。")]),_._v(" "),v("li",[_._v("不同的连接方式，端口也不同，HTTP协议端口是80，HTTPS协议端口是443；")]),_._v(" "),v("li",[_._v("HTTPS 需向 CA（证书权威机构）申请数字证书，费用高，保证服务器身份可信。")])]),_._v(" "),v("h3",{attrs:{id:"_5-2-https-是如何解决上面的三个风险的"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-https-是如何解决上面的三个风险的"}},[_._v("#")]),_._v(" 5.2 HTTPS 是如何解决上面的三个风险的？")]),_._v(" "),v("ul",[v("li",[_._v("混合加密的方式实现信息的机密性，解决了窃听的风险。——对称加密算法采用协商的秘钥对数据加密，非对称加密实现身份认证和秘钥协商")]),_._v(" "),v("li",[_._v("摘要算法的方式来实现完整性，它能够为数据生成独一无二的「指纹」，指纹用于校验数据的完整性，解决了篡改的风险。——基于散列函数验证信息的完整性")]),_._v(" "),v("li",[_._v("将服务器公钥放入到数字证书中，解决了冒充的风险。")])]),_._v(" "),v("h3",{attrs:{id:"_5-3-https是如何建立连接的-其间交互了什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-https是如何建立连接的-其间交互了什么"}},[_._v("#")]),_._v(" 5.3 HTTPS是如何建立连接的？其间交互了什么？")]),_._v(" "),v("p",[_._v("HTTPS是什么？加密原理和证书。SSL/TLS握手过程？")]),_._v(" "),v("iframe",{attrs:{src:"//player.bilibili.com/player.html?aid=252129535&bvid=BV1KY411x7Jp&cid=457483015&page=1",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"true"}}),_._v(" "),v("p",[_._v("SSL/TLS 协议基本流程：")]),_._v(" "),v("ul",[v("li",[_._v("客户端向服务器索要并验证服务器的公钥。")]),_._v(" "),v("li",[_._v("双方协商生产「会话秘钥」。")]),_._v(" "),v("li",[_._v("双方采用「会话秘钥」进行加密通信。")])]),_._v(" "),v("p",[_._v("前两步也就是 SSL/TLS 的建立过程，也就是握手阶段。")]),_._v(" "),v("p",[_._v("SSL/TLS 协议建立的详细流程：")]),_._v(" "),v("ol",[v("li",[_._v("ClientHello")])]),_._v(" "),v("p",[_._v("首先，由客户端向服务器发起加密通信请求。发送信息：\n（1）客户端支持的 SSL/TLS 协议版本，如 TLS 1.2 版本。\n（2）客户端生产的随机数（Client Random），后面用于生产「会话秘钥」。\n（3）客户端支持的密码套件列表，如 RSA 加密算法。")]),_._v(" "),v("p",[_._v("SSL/TLS 协议建立的详细流程：")]),_._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[_._v("SeverHello")])]),_._v(" "),v("p",[_._v("服务器收到客户端请求后。回应：\n（1）确认 SSL/ TLS 协议版本，如果浏览器不支持，则关闭加密通信。\n（2）服务器生产的随机数（Server Random），后面用于生产「会话秘钥」。\n（3）确认的密码套件列表，如 RSA 加密算法。\n（4）服务器的数字证书。")]),_._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[_._v("客户端回应")])]),_._v(" "),v("p",[_._v("客户端收到服务器的回应之后，首先通过浏览器或者操作系统中的 CA 公钥，确认服务器的数字证书的真实性。")]),_._v(" "),v("p",[_._v("如果证书没有问题，客户端会从数字证书中取出服务器的公钥，然后使用它加密报文，向服务器发送如下信息：")]),_._v(" "),v("ul",[v("li",[_._v("一个随机数（pre-master key）。该随机数会被服务器公钥加密。")]),_._v(" "),v("li",[_._v("加密通信算法改变通知，表示随后的信息都将用「会话秘钥」加密通信。")]),_._v(" "),v("li",[_._v("客户端握手结束通知，表示客户端的握手阶段已经结束。这一项同时把之前所有内容的发生的数据做个摘要，用来供服务端校验。")])]),_._v(" "),v("p",[_._v("上面第一项的随机数是整个握手阶段的第三个随机数，这样服务器和客户端就同时有三个随机数，接着就用双方协商的加密算法，各自生成本次通信的「会话秘钥」。")]),_._v(" "),v("ol",{attrs:{start:"4"}},[v("li",[_._v("服务器的最后回应")])]),_._v(" "),v("p",[_._v("服务器收到客户端的第三个随机数（pre-master key）之后，通过协商的加密算法，计算出本次通信的「会话秘钥」。然后回复：")]),_._v(" "),v("ul",[v("li",[_._v("加密通信算法改变通知，表示随后的信息都将用「会话秘钥」加密通信。")]),_._v(" "),v("li",[_._v("服务器握手结束通知，表示服务器的握手阶段已经结束。这一项同时把之前所有内容的发生的数据做个摘要，用来供客户端校验。")])]),_._v(" "),v("p",[_._v("至此，整个 SSL/TLS 的握手阶段全部结束。接下来，客户端与服务器进入加密通信，就完全是使用普通的 HTTP 协议，只不过用「会话秘钥」加密内容。")]),_._v(" "),v("p",[v("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzUxODAzNDg4NQ==&mid=2247483971&idx=1&sn=8f2d5dae3d95efc446061b352c8e9961&chksm=f98e46e9cef9cfff1f6bee1974b8dc27dcc42f0627dcf8ff0c0df8dbaa7a1f74587e3fafc167&scene=178&cur_album_id=1337204681134751744#rd",target:"_blank",rel:"noopener noreferrer"}},[_._v("更多相关参考这篇文章"),v("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=a.exports}}]);