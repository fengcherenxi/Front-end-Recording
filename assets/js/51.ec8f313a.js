(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{632:function(t,s,a){"use strict";a.r(s);var e=a(17),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-子组件可以直接改变父组件的数据吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-子组件可以直接改变父组件的数据吗"}},[t._v("#")]),t._v(" 1. 子组件可以直接改变父组件的数据吗？")]),t._v(" "),a("p",[t._v("不可以。是为了维护单向数据流。如果这样做Vue会警告。\n是为防止意外改变父状态，使数据流难以理解导致数据流混乱。若破坏单向数据流，复杂时debug 成本高。")]),t._v(" "),a("h2",{attrs:{id:"_2-delete和vue-delete删除数组的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-delete和vue-delete删除数组的区别"}},[t._v("#")]),t._v(" 2. delete和Vue.delete删除数组的区别")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("delete")]),t._v(" ：被删除的元素变为 "),a("code",[t._v("empty/undefined")]),t._v(" 其他的元素键值不变。")]),t._v(" "),a("li",[a("code",[t._v("Vue.delete")]),t._v(" 直接删除了数组，改变了数组的键值。")])]),t._v(" "),a("h2",{attrs:{id:"_3-template和jsx的有什么分别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-template和jsx的有什么分别"}},[t._v("#")]),t._v(" 3. template和jsx的有什么分别？")]),t._v(" "),a("p",[t._v("对于 runtime 来说，只需要保证组件存在 render 函数即可，而有预编译之后，只需要保证构建过程中生成 render 函数就可以。在 webpack 中，使用"),a("code",[t._v("vue-loader")]),t._v("编译.vue文件，内部依赖的"),a("code",[t._v("vue-template-compiler")]),t._v("模块，在 webpack 构建过程中，将template预编译成 render 函数。与 react 类似，在添加了jsx的语法糖解析器"),a("code",[t._v("babel-plugin-transform-vue-jsx")]),t._v("之后，就可以直接手写render函数。")]),t._v(" "),a("p",[t._v("template和jsx是render的一种表现形式。\n不同的是：JSX有更高灵活性，在复杂的组件中有优势。但 template 在代码结构上更符合视图与逻辑分离的习惯，更简单直观好维护。")]),t._v(" "),a("h2",{attrs:{id:"_4-给-data-中的对象属性添加新的属性时会发生什么-如何解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-给-data-中的对象属性添加新的属性时会发生什么-如何解决"}},[t._v("#")]),t._v(" 4. 给 data 中的对象属性添加新的属性时会发生什么？如何解决？")]),t._v(" "),a("p",[t._v("属性成功添加，但视图未刷新。这是因为在Vue实例创建时，属性并未声明没有被转换为响应式。需用全局api：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addObjB")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'obj.b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"_5-自定义指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-自定义指令"}},[t._v("#")]),t._v(" 5. 自定义指令")]),t._v(" "),a("p",[t._v("对普通 DOM 元素进行底层操作，用到自定义指令。")]),t._v(" "),a("h3",{attrs:{id:"_5-1-自定义指令基本内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-自定义指令基本内容"}},[t._v("#")]),t._v(" 5.1 自定义指令基本内容")]),t._v(" "),a("ul",[a("li",[t._v("全局定义："),a("code",[t._v('Vue.directive("focus",{})')])]),t._v(" "),a("li",[t._v("局部定义："),a("code",[t._v("directives:{focus:{}}")])]),t._v(" "),a("li",[t._v("钩子函数：指令定义对象提供钩子函数\n"),a("ul",[a("li",[t._v("bind：只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。")]),t._v(" "),a("li",[t._v("inSerted：被绑定元素插入父节点时调用（仅保证父节点存在，但不一定已被插入文档中）。")]),t._v(" "),a("li",[t._v("update：所在组件的VNode更新时调用，但是可能发生在其子VNode更新之前调用。指令的值可能发生了改变，也可能没有。但是可以通过比较更新前后的值来忽略不必要的模板更新。")]),t._v(" "),a("li",[t._v("ComponentUpdate：指令所在组件的 VNode及其子VNode全部更新后调用。")]),t._v(" "),a("li",[t._v("unbind：只调用一次，指令与元素解绑时调用。")])])])]),t._v(" "),a("h3",{attrs:{id:"_5-2-使用案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-使用案例"}},[t._v("#")]),t._v(" 5.2 使用案例")]),t._v(" "),a("ul",[a("li",[t._v("初级应用：鼠标聚焦、下拉菜单、相对时间转换、滚动动画")]),t._v(" "),a("li",[t._v("高级应用：自定义指令实现图片懒加载、自定义指令集成第三方插件")])]),t._v(" "),a("h2",{attrs:{id:"_6-什么是-mixin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-什么是-mixin"}},[t._v("#")]),t._v(" 6. 什么是 mixin ？")]),t._v(" "),a("ul",[a("li",[t._v("Mixin 能为组件编写可插拔和可重用的功能。")]),t._v(" "),a("li",[t._v("希望在多组件之间重用一组组件选项，例如生命周期 hook、 方法等，则可以将其编写为 mixin，并在组件中简单的引用它。")]),t._v(" "),a("li",[t._v("然后将 mixin 的内容合并到组件中。如果你要在 mixin 中定义生命周期 hook，那么它在执行时将优于组件自已的 hook。")])]),t._v(" "),a("h2",{attrs:{id:"_7-mixin-mixins-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-mixin-mixins-区别"}},[t._v("#")]),t._v(" 7. mixin && mixins 区别")]),t._v(" "),a("p",[a("code",[t._v("mixin")]),t._v(" 用于全局混入，会影响到每个组件实例，通常插件都是这样做初始化的。")]),t._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[t._v("Vue.mixin({\n    beforeCreate() {\n        // ...逻辑\n        // 这种方式会影响到每个组件的 beforeCreate 钩子函数\n    }\n})\n")])])]),a("p",[t._v("虽然文档不建议直接使用 "),a("code",[t._v("mixin")]),t._v("，但是有些场景适用，比如可以全局混入封装好的 "),a("code",[t._v("ajax")]),t._v(" 或者一些工具函数等等。")]),t._v(" "),a("p",[a("code",[t._v("mixins")]),t._v(" 应该是最常使用的扩展组件的方式了。若多组件中有相同业务逻辑，将逻辑剥离出来，通过 "),a("code",[t._v("mixins")]),t._v(" 混入代码，比如上拉下拉加载数据这种逻辑。")]),t._v(" "),a("p",[t._v("需注意 "),a("code",[t._v("mixins")]),t._v(" 混入的钩子函数会先于组件内的钩子函数执行，并且在遇到同名选项的时候也会有选择性的进行合并（组件内优先）。")]),t._v(" "),a("h2",{attrs:{id:"_8-简述-mixin、extends-的覆盖逻辑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-简述-mixin、extends-的覆盖逻辑"}},[t._v("#")]),t._v(" 8. 简述 mixin、extends 的覆盖逻辑")]),t._v(" "),a("h3",{attrs:{id:"_8-1-mixin-和-extends"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-mixin-和-extends"}},[t._v("#")]),t._v(" 8.1 mixin 和 extends")]),t._v(" "),a("p",[t._v("mixin 和 extends均是用于合并、拓展组件的，两者均通过 mergeOptions 方法实现合并。")]),t._v(" "),a("ul",[a("li",[t._v("mixins 接收一个混入对象的数组，其中混入对象可以像正常的实例对象一样包含实例选项，这些选项会被合并到最终的选项中。Mixin 钩子按照传入顺序依次调用，并在调用组件自身的钩子之前被调用。")]),t._v(" "),a("li",[t._v("extends 主要是为了便于扩展单文件组件，接收一个对象或构造函数。Vue.extend()创建的是一个组件构造器，而不是一个具体的组件实例。")])]),t._v(" "),a("h3",{attrs:{id:"_8-2-mergeoptions-的执行过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-mergeoptions-的执行过程"}},[t._v("#")]),t._v(" 8.2 mergeOptions 的执行过程")]),t._v(" "),a("ul",[a("li",[t._v("规范化选项（normalizeProps、normalizelnject、normalizeDirectives)")]),t._v(" "),a("li",[t._v("对未合并的选项，进行判断")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_base"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extends"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        parent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mergeOptions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extends"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mixins"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mixins"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            parent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mergeOptions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mixins"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("合并处理。根据一个通用 Vue 实例所包含的选项进行分类逐一判断合并，如 props、data、 methods、watch、computed、生命周期等，将合并结果存储在新定义的 options 对象里。")]),t._v(" "),a("li",[t._v("返回合并结果 options。")])])])}),[],!1,null,null,null);s.default=n.exports}}]);